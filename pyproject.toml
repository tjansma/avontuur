[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "avontuur"
version = "0.1"
maintainers = [{ name = "Tim Jansma", email = "tjansma@gmail.com" }]
description = "Experimental text adventure game (engine)."
requires-python = ">=3.10"
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "GPLv2" }
keywords = [
  "text-only",
  "game",
  "engine",
  "framework",
  "text",
  "adventure",
  "ascii",
  "utf-8",
  "terminal",
]
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Development Status :: 1 - Planning",
  "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Topic :: Games/Entertainment :: Puzzle Games",
  "Topic :: Games/Entertainment :: Role-Playing",
  "Topic :: Games/Entertainment :: Simulation",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
  # core dependencies
  "pydantic < 2.0",
  # for unit tests and code formatting
  "mock >= 4.0.3",
  "model_mommy >= 2.0",
  "anything ==0.2.1",
  "black >= 22.6",
  "isort >= 5.10",
  "parameterized ==0.8.1"
]

[project.optional-dependencies]

extra = [
  # contrib optional dependencies
  # install with 'pip install evennia[extra]`

  # crypto libraries for ssh support
  #"cryptography >= 2.8",
  #"pyasn1 >= 0.4.8",
  #"bcrypt >= 3.1.7",
]

[project.urls]
"Homepage" = "https://github.com/tjansma/avontuur"
"Github" = "https://github.com/tjansma/avontuur"
"Documentation" = "https://github.com/tjansma/avontuur"
"Issue tracker" = "https://github.com/tjansma/avontuur/issues"

[tool.black]
line-length = 100
target-version = ['py310', 'py311']
exclude = '''

  (
    /(
        \.eggs         # exclude a few common directories in the
      | \.git          # root of the project
      | \.hg
      | \.mypy_cache
      | \.tox
      | \.venv
      | _build
      | buck-out
      | build
      | dist
    )/
    | migrations
    | docs

  )
'''

[tool.coverage]

[tool.coverage.run]
concurrency = ["multiprocessing"]
parallel = true
source = ["avontuur"]
omit = [
  "*/migrations/*",
  "*/urls.py",
  "*/test*.py",
  "*.sh",
  "*.txt",
  "*.md",
  "*.pyc",
  "*.service",
]
